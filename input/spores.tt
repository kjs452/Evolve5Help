include{common.tt}
MySite.window_title{ EvolveName{} - Spores }
MySite.body{

Section{Spores}
P{
This is your spore,
}

IMG{aspore.gif}

P{
This is your spore on drugs,
}

P{
IMG{asporedrugs.gif}
}

SubSection{What is a spore?}
P{
When you explore a simulation you'll notice blue squares. These are spores.
Spores are created when an organism executes the instruction B{MAKE-SPORE}.
}

P{
A spore is the first stage in reproducing a new organism. The second (and last) stage
is when a second spore is created on top of the first one. At this point the spore becomes
fertilized and a new organism is born.
}

P{
A spore, as the name implies, is like an egg or sperm. When first created, it contains
an exact copy of the genetic program from the organism that created it (no mutations
have been applied yet). When the second spore is created, the genetic program from that
organism is B{merged} with the genetic program associated with the spore. If
this happens to be the same organism, then the result is an exact copy of this
organisms genetic program (asexual reproduction). However, if the second organism
is different then the two programs get merged, and unique variation could be created.
}

HRULE{}

SubSection{Asexual Reproduction}
P{
Asexual reproduction occurs when the same organism creates a spore and then
fertilizes it. Here are the instructions that an organism might
execute to perform asexual reproduction:
}

Code<<_EOF_
	-1 0 5 MAKE-SPORE	; create spore at relative offset (-1, 0)
				; with an energy of '5'.
	-1 0 6 MAKE-SPORE	; create second spore at relative offset (-1, 0)
				; with an energy of '6'.

	; (a new organism will be created, with energy of 11)
_EOF_

IMGB{spore1.gif}
IMGB{spore2.gif}

P{
That's about all there is to know about asexual reproduction. You may be wondering how
genetic variation gets generated since the child program is identical to the parent?
Well, in creating the new organism LINK{URL{mutations.html#mutations} mutations} (a seperate process) may have been introduced,
so the child genetic program may be slightly different than it parent.
}

HRULE{}

SubSection{Sexual Reproduction}
P{
Sexual reproduction occurs when two organisms donate a spore toward the creation
of a new organism. What happens in this case is organism A creates a spore. Then
organism B comes along and creates a second spore on top of the first.
}

P{
Sexual reproduction differs from asexual reproduction in that two different genetic
programs must be merged before the new organism is created.
}

HRULE{}

REF{merge}
SubSection{Merging Genetic Programs}
P{
In I{sexual} reproduction the genetic programs from the
first and second spore must be merged. This is the concept of recombination. It has the potential
to create a gene pool in the universe.
}

P{
Organism A creates the first spore, and then organism B comes along
and fertilizes it. In this example we have two I{different} genetic
programs to merge. Here is how it happens:
}

P{
First a random bit string is generated. The bit string consists of 16-bits. For examples, lets
assume the bit string is 0101010101010101. This bit pattern is used to select the
code block from the first or second organism. A "0" selects organism A and "1" selects
the code block from organism B. The bit string is repeated as needed to cover all the
code blocks. If one of the organisms has more code blocks, then it is always selected
and added to the offsprings kforth program.
}

P{
Here is the genetic program for organism A:
}

Code<<_EOF_
	main: { X X Y Z }
	row1: { 1 2 3 }
	row2: { X0 Y0 }
	row3: { K 1 I 8 }
	row4: { R 1 2 J }
	row5: { B B 89 }
_EOF_

P{
Here is the genetic program for organism B:
}

Code<<_EOF_
	main: { A B C }
	row1: { JJ YY ZZ }
	row2: { W P Q
	row3: { RY RY Z }
	row4: { S X S 0 }
_EOF_

P{
Here's how the two genetic programs are merged:
}

MergeTable{
	TH{ }
	TH{ Bit }
	TH{B{Organism A}}
	TH{ B{Organism B} }
	TH{ B{Offspring} }

	TD{ B{main:} }
	TD{ 0 }
	TD2{ X X Y Z }
	TD{ A B C }
	TD{ X X Y Z }

	TD{ B{row1:} }
	TD{ 1 }
	TD{ 1 2 3 }
	TD2{ JJ YY ZZ }
	TD{ JJ YY ZZ }

	TD{ B{row2:} }
	TD{ 0 }
	TD2{ X0 Y0 }
	TD{ W P Q }
	TD{ X0 Y0 }

	TD{ B{row3:} }
	TD{ 1 }
	TD{ K 1 I 8 }
	TD2{ RY RY Z }
	TD{ RY RY Z }

	TD{ B{row4:} }
	TD{ 0 }
	TD2{ R 1 2 J }
	TD{  S X S 0 }
	TD{  R 1 2 J }

	TD{ B{row5:} }
	TD{ 1 }
	TD2{ B B 89 }
	TD{ I{empty} }
	TD{  B B 89 }
}

P{
This example shows a new variation being added
to the gene pool. B{EvolveName{}} doesn't enforce sexual reproduction
it just offers the capability, assuming that something might evolve to use it.
}

P{
Only organism A has a B{row5} so it always gets tranferred to the offsprings genetic program.
}

} //{ MySite.body }
