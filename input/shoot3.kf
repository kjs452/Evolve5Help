;
; spawn3 - this version eats in the direction of motion until no more
;
; This creature uses SPAWN to make an uneat-able bullet
; out of itself to kill a creature.
;
; assumes SPAWN changed to not copy stacks
;
; STRAIN 5 should be un-eatble eat_mode -> 8
; (x y energy strain cb -- rc)      SPAWN
;
; SPAWN mode: set these bits    (spawn_mode=46)
;   bit 1   keep protected code blocks  (optional)
;   bit 2   can change strains
;   bit 8   dont mutate
;   bit 5   inherit "010" data stack items (2)
;
main:
{
    evolve call
}

_trap1: { }
_trap2: { }
_trap3: { }
_trap4: { }
_trap5: { }

; (x y -- rc) shoot
_trap6: {
    DSLEN 54 >= ?exit
    2dup 1 5 bullet SPAWN pop 2pop
}

_trap7: {  }
_trap8: {  }
_trap9: {  }

;
; (x y -- )
; go out
;
bullet:
{
    { 2dup OMOVE ?loop } call       ; bullet move

    {
        2dup EAT pop
        2dup OMOVE pop      ; ( x y -- x y rc)
        255 NEAREST EAT
        ?loop
    } call

    HALT
}

; --- protected / unprotected ---

;
; standard seed program
;
evolve:
{
    -1 0 trap6

    reproduce call
    reproduce call

    ;
    ; go SOUTH-EAST until blocked (eat along the way)
    ;
    { 1 1 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; go WEST until blocked (eat along the way)
    ;
    { -1 0 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; go SOUTH-WEST until blocked (eat along the way)
    ;
    { -1 1 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; go EAST until blocked (eat along the way)
    ;
    { 1 0 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; go NORTH-EAST until blocked (eat along the way)
    ;
    { 1 -1 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; go SOUTH until blocked (eat along the way)
    ;
    { 0 1 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; go NORTH until blocked (eat along the way)
    ;
    { 0 -1 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; go NORTH-WEST until blocked (eat along the way)
    ;
    { -1 -1 2dup eat pop omove ?loop } call

    reproduce call

    ;
    ; do it all over again
    ;
    1 ?loop
}

reproduce:
{
    ;
    ; compute 1/4 of our energy, and store in R0
    ;
    energy 4 / R0!

    ;
    ; Make 1st spore to the square on our left.
    ;
    -1 0 R0 make-spore pop

    ;
    ; Put 2nd spore at the same spot (fertilizing it)
    ;
    -1 0 R0 make-spore pop

    ;
    ; get the hell out of the way so we don't eat our own
    ; babies, or they don't eat us.
    ;
    1 1 omove pop
    0 -1 omove pop
    0 -1 omove pop
    0 -1 omove pop
    0 -1 omove pop
    0 -1 omove pop
}

